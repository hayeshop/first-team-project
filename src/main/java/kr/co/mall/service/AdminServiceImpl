package kr.co.mall.service;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;

import kr.co.mall.mapper.AdminMapper;
import kr.co.mall.vo.AdminVo;

@Service
@Qualifier("as")	//adminService
public class AdminServiceImpl implements AdminService {

	@Autowired
	private AdminMapper mapper;
	
	@Override
	public String write_ok(AdminVo avo,HttpSession session) {
		mapper.write_ok(avo);
    	int chk;
    	if(session.getAttribute("userid")==null)
    	{
    		return "../main/main.jsp";
    	}
    	else
    	{
    		if(avo.getChk()==1)
    		{
    			// 맨 위 공지로 띄우기
    		}
    		return "redirect:/gongji/list";
    	}
    	
	}
	
	@Override
	public String list(Model model,HttpServletRequest request) {
		int index = 0;
		ArrayList<AdminVo> list=mapper.list(index);
		model.addAttribute("list",list);
		return "/gongji/list";
	}
	
	@Override
	public String content(HttpServletRequest request, Model model) {
		String id=request.getParameter("id");
        AdminVo avo=mapper.content(id);
        model.addAttribute("avo",avo);
		return "/gongji/content";
	}
	
	@Override
	public String delete(AdminVo avo, HttpSession session) {
		mapper.delete(avo.getId());
		return "redirect:/gongji/list";
	}
	
	@Override
	public String update(AdminVo avo,Model model) {
		AdminVo avo2=mapper.update(avo);
		model.addAttribute("avo",avo2);
		return "/gongji/update";
	}

	@Override
	public String update_ok(AdminVo avo) {
		// 관리자만 수정 가능
		String userid="";
		if(userid.equals("admin"))
		{
			mapper.update_ok(avo);
			return "redirect:/gongji/content";
		}
		else
		{
			return "../main/main.jsp";
		}
	}
	
}
