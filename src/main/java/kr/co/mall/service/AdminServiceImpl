package kr.co.mall.service;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;

import kr.co.mall.mapper.AdminMapper;
import kr.co.mall.vo.AdminVo;

@Service
@Qualifier("as")
public class AdminServiceImpl implements AdminService {

	@Autowired
	private AdminMapper mapper;
	
	@Override
	public String write(AdminVo avo,
			HttpServletRequest request) {
		mapper.write(avo);
		int chk;
    	if(request.getParameter("chk")==null)
    	{
    		chk=0;
    	}
    	else
    	{
    		// (체크시 항상 첫 페이지에 나오는 공지사항)
    		chk=1;
    	}
	}
	
	@Override
	public String write_ok(AdminVo avo,
			HttpServletRequest request) {
		int chk;
    	if(request.getParameter("chk")==null)
    	{
    		chk=0;
    	}
    	else
    	{
    		chk=1;
    	}
    	
    	String userid="";
    	if(userid.equals("admin"))
    	{
    		return "redirect:/gongji/list";
    	}
    	else
    	{
    		return "../main/main.jsp";
    	}
	}
	
	@Override
	public String list(HttpServletRequest request) {
		ArrayList<AdminVo> list = mapper.list<AdminVo>();
		return "gongji/list";
	}
	
	@Override
	public String content(HttpServletRequest request) {
		String id=request.getParameter("id");
		
		PreparedStatement pstmt=conn.prepareStatement(sql);
    	pstmt.setString(1, id);
    	
    	ResultSet rs=pstmt.executeQuery();
    	rs.next();
    	
    	GongjiDto gdto=new GongjiDto();
		gdto.setTitle(rs.getString("title"));
		gdto.setWriteday(rs.getString("writeday"));
		gdto.setChk(rs.getInt("chk"));
		gdto.setContent(rs.getString("content"));
		
		request.setAttribute("gdto", gdto);
		
	}
	
	@Override
	public String delete(AdminVo avo) {
		mapper.delete(avo.getId());
		return "redirect:/gongji/list";
	}
	
	@Override
	public String update(AdminVo avo,Model model) {
		AdminVo avo2=mapper.update(avo);
		model.addAttribute("avo",avo2);
		return "/update";
	}

	@Override
	public String update_ok(AdminVo avo) {
		// 관리자만 수정 가능
		String userid="";
		if(userid.equals("admin"))
		{
			mapper.update_ok(avo);
			return "redirect:/gongji/content";
		}
		else
		{
			return "../main/main.jsp";
		}
	}
	
}
